{"name":"CMDKit Framework","tagline":"A framework to help make Objective-C programs for the UNIX Command Line.","body":"CMDKit\r\n======\r\n\r\nThe CMDKit Framework, or Command Kit Framework, is a framework that helps make Objective-C programs for the UNIX Command Line.  \r\n\r\nThe framework is very simple to use. Here are the different features, and a bit about how they work:\r\n\r\n####CMDArgumentHandle\r\n\r\nParses the input from argc and argv in `main()` and adds a load of useful features for interpreting the arguments. Maintains a list of valid options, their arguments, and can even print invalid options if they're present.\r\n\r\n####CMDOption\r\n\r\nHolds information about a valid option: its \"name\", number of arguments, and whether it is just a single letter or a word. Used in conjunction with CMDArgumentHandle to easily see if any invalid options are present, and to acquire the arguments of a given option.\r\n\r\n####CMDConsoleManager\r\n\r\nManages a console and notifies the delegate of any input received. Extremely useful for using commands within a program.\r\n\r\n####CMDPrinting\r\n\r\nVarious printing functions that seamlessly blend printf and new lines.\r\n\r\n###Wiki\r\n\r\nBe sure to take a look at the [wiki](https://github.com/Macro206/CMDKit-Framework/wiki) for full documentation on the various classes and protocols.\r\n\r\n###Note:  \r\n  \r\nSpecifically made for Mac. It uses the Foundation Framework, which is available by default on Macs.\r\n\r\nTherefore it won't work on Linux or Windows.\r\n\r\nHowever, you're welcome to rewrite it (e.g. in C++) so that it works on other platforms. If you choose to publish the modified code, please attribute me, or even better, include a link to the original repository.\r\n\r\nThanks!\r\n\r\nMade by Macro206\r\n\r\n[Back to Home](http://macro206.github.io)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}